{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"SentimentAnalysis(NLP)","version":"0.3.2","provenance":[{"file_id":"1x4nhkkBq8bzM-ptSkPg66Vok1Ojubz_n","timestamp":1566327594320}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"So4w9GjABTKz","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8NZNszkbCdyN","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZqiAiMwHCeoV","colab_type":"code","outputId":"922e6d62-2b37-4976-fea9-17bf5af7c031","executionInfo":{"status":"ok","timestamp":1566475362024,"user_tz":-330,"elapsed":749,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Pp3bYk6vB7aq","colab_type":"text"},"source":["Unzipping Movie_Data Reviews file\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"NwfBaPC8CTbq","colab_type":"code","outputId":"e1a0d00d-5907-4f5e-a9fe-d060bde8e00c","executionInfo":{"status":"ok","timestamp":1566724739818,"user_tz":-330,"elapsed":4906,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Unzipping Movie_Data Reviews file\n","\n","from zipfile import ZipFile\n","file='drive/My Drive/Data/Word-Embeddding-Sentiment-Classification-master.zip'\n","\n","with ZipFile(file,'r')as zip:\n","  zip.extractall()\n","  print('Done')"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Done\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bPSjG1qLCNvJ","colab_type":"text"},"source":["Loding Movie_Data Reviews csv file"]},{"cell_type":"code","metadata":{"id":"51V2FuZfCbBE","colab_type":"code","outputId":"b7a290b8-496b-4d89-c3b5-8bda59c8592f","executionInfo":{"status":"ok","timestamp":1566724777352,"user_tz":-330,"elapsed":2008,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":195}},"source":["#Loding Movie_Data Reviews csv file\n","df=pd.DataFrame()\n","df=pd.read_csv('Word-Embeddding-Sentiment-Classification-master/movie_data.csv',encoding='utf-8')\n","df.head()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>I went and saw this movie last night after bei...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Actor turned director Bill Paxton follows up h...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>As a recreational golfer with some knowledge o...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>I saw this film in a sneak preview, and it is ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Bill Paxton has taken the true story of the 19...</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                              review  sentiment\n","0  I went and saw this movie last night after bei...          1\n","1  Actor turned director Bill Paxton follows up h...          1\n","2  As a recreational golfer with some knowledge o...          1\n","3  I saw this film in a sneak preview, and it is ...          1\n","4  Bill Paxton has taken the true story of the 19...          1"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"d5CxmzCZDmkZ","colab_type":"code","colab":{}},"source":["X=df['review']\n","y=df['sentiment']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZiAMh36IEEZ1","colab_type":"code","colab":{}},"source":["from tensorflow.python.keras.preprocessing.text import Tokenizer\n","from tensorflow.python.keras.preprocessing.sequence import pad_sequences"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"92TcPVEtEXqI","colab_type":"code","colab":{}},"source":["#To generate tokens of words\n","tokenizer_obj=Tokenizer()\n","a=tokenizer_obj.fit_on_texts(X)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7VVACLtUF2f-","colab_type":"code","colab":{}},"source":["max_length=100\n","vocab_size=len(tokenizer_obj.word_index)+1\n","X_tokens=tokenizer_obj.texts_to_sequences(X)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"VEh8Ooh4GL9I","colab_type":"code","colab":{}},"source":["# Applying padding on tokens\n","X_pad=pad_sequences(X_tokens,maxlen=max_length,padding='post')\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2em1H6rLLM08","colab_type":"code","colab":{}},"source":["from keras.models import Sequential\n","from keras.layers import Dense,LSTM,GRU\n","from keras.layers.embeddings import Embedding"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"loV2oXNODGK6","colab_type":"text"},"source":["Loading pretrained glove embedding file"]},{"cell_type":"code","metadata":{"id":"NOKcwwdVCCxY","colab_type":"code","outputId":"4ec29df1-482c-4f70-b128-14de55a8f3b4","executionInfo":{"status":"ok","timestamp":1566724733114,"user_tz":-330,"elapsed":8725,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from zipfile import ZipFile\n","file='drive/My Drive/glove6b100dtxt.zip'\n","\n","with ZipFile(file,'r')as zip:\n","  zip.extractall()\n","  print('Done')"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Done\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YCnKWlshRFz1","colab_type":"code","outputId":"731d1603-2a20-414b-f9e2-37ed81035f91","executionInfo":{"status":"ok","timestamp":1566724814676,"user_tz":-330,"elapsed":12340,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import os\n","embeddings_index = {}\n","f = open(os.path.join('', 'glove.6B.100d.txt'))\n","for line in f:\n","    values = line.split()\n","    word = values[0]\n","    coefs = np.asarray(values[1:], dtype='float32')\n","    embeddings_index[word] = coefs\n","f.close()\n","\n","print('Found %s word vectors.' % len(embeddings_index))"],"execution_count":20,"outputs":[{"output_type":"stream","text":["Found 400000 word vectors.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"26UKpr_oLuBq","colab_type":"code","colab":{}},"source":["# Generating Embedding Matrix\n","import gensim\n","EMBEDDING_DIM=100\n","embedding_matrix = np.zeros((len(tokenizer_obj.word_index) + 1, EMBEDDING_DIM))\n","for word, i in tokenizer_obj.word_index.items():\n","    embedding_vector = embeddings_index.get(word)\n","    if embedding_vector is not None:\n","        embedding_matrix[i] = embedding_vector\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tBXxxYtGMrzp","colab_type":"code","colab":{}},"source":["from keras.layers import Embedding\n","\n","#Generating Embedding Layer\n","embedding_layer = Embedding(len(tokenizer_obj.word_index) + 1,\n","                            EMBEDDING_DIM,\n","                            weights=[embedding_matrix],\n","                            input_length=max_length,\n","                            trainable=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-0ddlkP4DkiR","colab_type":"code","outputId":"28f93ccb-3bc2-4a13-f6df-122457e34b7c","executionInfo":{"status":"ok","timestamp":1566724826528,"user_tz":-330,"elapsed":2544,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":306}},"source":["# Building Model\n","model=Sequential()\n","model.add(embedding_layer)\n","model.add(LSTM(units=32,dropout=0.2))\n","model.add(Dense(1,activation='sigmoid'))\n","model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])"],"execution_count":23,"outputs":[{"output_type":"stream","text":["W0825 09:20:22.765813 140407283566464 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:517: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","W0825 09:20:22.770757 140407283566464 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4138: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","W0825 09:20:22.782590 140407283566464 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:174: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","W0825 09:20:22.783641 140407283566464 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:181: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","W0825 09:20:23.555449 140407283566464 deprecation.py:506] From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3445: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","W0825 09:20:24.010430 140407283566464 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:790: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","W0825 09:20:24.037503 140407283566464 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/nn_impl.py:180: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"U1Z3utEmD10l","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dcKD-ZSuEC6M","colab_type":"code","colab":{}},"source":["X_train,X_val,y_train,y_val=train_test_split(X_pad,y,test_size=0.5)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"I6q7K-g4ESzP","colab_type":"code","outputId":"67b27cf3-8d0f-49c5-8ac6-013d6bfcf63c","executionInfo":{"status":"ok","timestamp":1566728185357,"user_tz":-330,"elapsed":1602883,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["model.fit(X_train,y_train,epochs=30,batch_size=128,validation_data=(X_val,y_val))"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Train on 25000 samples, validate on 25000 samples\n","Epoch 1/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.6371 - acc: 0.6245 - val_loss: 0.5512 - val_acc: 0.7262\n","Epoch 2/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.5218 - acc: 0.7476 - val_loss: 0.4861 - val_acc: 0.7745\n","Epoch 3/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.4797 - acc: 0.7700 - val_loss: 0.4367 - val_acc: 0.8027\n","Epoch 4/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.4458 - acc: 0.7897 - val_loss: 0.4126 - val_acc: 0.8126\n","Epoch 5/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.4283 - acc: 0.8020 - val_loss: 0.4009 - val_acc: 0.8171\n","Epoch 6/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.4078 - acc: 0.8129 - val_loss: 0.3912 - val_acc: 0.8248\n","Epoch 7/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.4004 - acc: 0.8200 - val_loss: 0.3788 - val_acc: 0.8318\n","Epoch 8/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3850 - acc: 0.8240 - val_loss: 0.3795 - val_acc: 0.8290\n","Epoch 9/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3835 - acc: 0.8273 - val_loss: 0.3632 - val_acc: 0.8381\n","Epoch 10/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3721 - acc: 0.8308 - val_loss: 0.3616 - val_acc: 0.8406\n","Epoch 11/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3627 - acc: 0.8380 - val_loss: 0.3647 - val_acc: 0.8410\n","Epoch 12/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3551 - acc: 0.8405 - val_loss: 0.3497 - val_acc: 0.8457\n","Epoch 13/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3496 - acc: 0.8445 - val_loss: 0.3500 - val_acc: 0.8447\n","Epoch 14/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3450 - acc: 0.8452 - val_loss: 0.3524 - val_acc: 0.8420\n","Epoch 15/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3430 - acc: 0.8484 - val_loss: 0.3420 - val_acc: 0.8483\n","Epoch 16/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3369 - acc: 0.8512 - val_loss: 0.3404 - val_acc: 0.8502\n","Epoch 17/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3294 - acc: 0.8544 - val_loss: 0.3367 - val_acc: 0.8502\n","Epoch 18/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3239 - acc: 0.8559 - val_loss: 0.3343 - val_acc: 0.8531\n","Epoch 19/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.3182 - acc: 0.8617 - val_loss: 0.3456 - val_acc: 0.8492\n","Epoch 20/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.3231 - acc: 0.8563 - val_loss: 0.3489 - val_acc: 0.8459\n","Epoch 21/30\n","25000/25000 [==============================] - 54s 2ms/step - loss: 0.3130 - acc: 0.8636 - val_loss: 0.3369 - val_acc: 0.8556\n","Epoch 22/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3094 - acc: 0.8627 - val_loss: 0.3336 - val_acc: 0.8560\n","Epoch 23/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3081 - acc: 0.8644 - val_loss: 0.3293 - val_acc: 0.8565\n","Epoch 24/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3055 - acc: 0.8648 - val_loss: 0.3718 - val_acc: 0.8410\n","Epoch 25/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.3021 - acc: 0.8680 - val_loss: 0.3368 - val_acc: 0.8507\n","Epoch 26/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.2972 - acc: 0.8708 - val_loss: 0.3337 - val_acc: 0.8542\n","Epoch 27/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.2977 - acc: 0.8702 - val_loss: 0.3448 - val_acc: 0.8551\n","Epoch 28/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.2899 - acc: 0.8750 - val_loss: 0.3303 - val_acc: 0.8585\n","Epoch 29/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.2874 - acc: 0.8760 - val_loss: 0.3272 - val_acc: 0.8598\n","Epoch 30/30\n","25000/25000 [==============================] - 53s 2ms/step - loss: 0.2858 - acc: 0.8757 - val_loss: 0.3288 - val_acc: 0.8595\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fb27936e198>"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"Fedj1tVbD7ep","colab_type":"code","colab":{}},"source":["model.save_weights('drive/My Drive/sentiment.h5')\n","model.load_weights('drive/My Drive/sentiment.h5')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sS1bESwLTfDe","colab_type":"text"},"source":["Prediction of Reviews"]},{"cell_type":"code","metadata":{"id":"9kgNRPLdFoh3","colab_type":"code","outputId":"64a97211-216d-4fcf-cc7d-583e801e441e","executionInfo":{"status":"ok","timestamp":1566728623225,"user_tz":-330,"elapsed":1203,"user":{"displayName":"ashish bhatnagar","photoUrl":"","userId":"04356898029865693483"}},"colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["test_sample1=' I really like it because it is so good'\n","test_sample2='This movie is  bad'\n","test_sample3='This is a nice film'\n","test_sample4='This movie is not good'\n","test_sample5='This movie really sucks! Can I get my money back please?'\n","test_samples=[test_sample1,test_sample2,test_sample3,test_sample4,test_sample5]\n","test_sample_token=tokenizer_obj.texts_to_sequences(test_samples)\n","test_sample_tokens_pad=pad_sequences(test_sample_token,maxlen=max_length)\n","d=model.predict(x=test_sample_tokens_pad)\n","print('Reviews\\n')\n","for test in test_samples:\n","  print(test)\n","print('\\n')  \n","print('Sentiment Prediction\\n')\n","for i in range( len(d)):\n","  if d[i]>0.5:\n","     print('This review is positive ')\n","  else:\n","    print('This review is negative')\n","    "],"execution_count":42,"outputs":[{"output_type":"stream","text":["Reviews\n","\n"," I really like it because it is so good\n","This movie is  bad\n","This is a nice film\n","This movie is not good\n","This movie really sucks! Can I get my money back please?\n","\n","\n","Sentiment Prediction\n","\n","This review is positive \n","This review is negative\n","This review is positive \n","This review is negative\n","This review is negative\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xxwW8EthTi1U","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nKATfIF958VH","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}